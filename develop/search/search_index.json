{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#plugnpin","title":"\ud83d\udd0c PlugNPiN","text":"<p>Plug and play your docker containers into Pi-Hole &amp; Nginx Proxy Manager</p> <p>Automatically detect running Docker containers based on labels, add them as local DNS records in Pi-Hole and create matching proxy hosts in Nginx Proxy Manager.</p>"},{"location":"#how-it-works","title":"How It Works","text":"<p>PlugNPiN discovers services by scanning for Docker containers that have the following labels:</p> <ul> <li><code>plugNPiN.ip</code> - The IP address and port of the container (e.g., <code>192.168.1.100:8080</code>).</li> <li><code>plugNPiN.url</code> - The desired URL for the service (e.g., <code>my-service.local</code>).</li> </ul> <p>The application operates in two complementary modes to keep your services synchronized:</p> <ol> <li> <p>Real-Time Event Listening: The application actively listens for Docker container events. When a container with the required labels is started, stopped, or killed, the tool immediately adds or removes the corresponding DNS and proxy host entries. This ensures that your services are updated in real-time as containers change state.</p> </li> <li> <p>Periodic Synchronization: In addition to real-time events, the tool performs a full synchronization at a regular interval, defined by the <code>RUN_INTERVAL</code> environment variable. During this periodic run, it scans all running containers and ensures that their DNS and proxy configurations are correct. This acts as a self-healing mechanism, correcting any entries that might have been missed or become inconsistent.</p> </li> </ol> <p>When a container is processed in either mode, PlugNPiN will:</p> <ol> <li>Create a DNS record pointing the specified <code>url</code> to the <code>ip</code> address on Pi-Hole.</li> <li>Create a proxy host to route traffic from the <code>url</code> to the container's <code>ip</code> and <code>port</code> on Nginx Proxy Manager.</li> </ol>"},{"location":"#configuration","title":"Configuration","text":""},{"location":"#environment-variables","title":"Environment Variables","text":""},{"location":"#required","title":"Required","text":"Variable Description <code>NGINX_PROXY_MANAGER_HOST</code> The URL of your Nginx Proxy Manager instance. <code>NGINX_PROXY_MANAGER_USERNAME</code> Your Nginx Proxy Manager username. <code>NGINX_PROXY_MANAGER_PASSWORD</code> Your Nginx Proxy Manager password.  Important: It is recommended to create a new non-admin user with only the \"Proxy Hosts - Manage\" permission. <code>PIHOLE_HOST</code> The URL of your Pi-hole instance. <code>PIHOLE_PASSWORD</code> Your Pi-hole password.  Important: It is recommended to create an 'application password' rather than using your actual admin password."},{"location":"#optional","title":"Optional","text":"Variable Description Default <code>DOCKER_HOST</code> The URL of a docker socket proxy. If set, you don't need to mount the docker socket as a volume. Querying containers must be allowed (typically done by setting the <code>CONTAINERS</code> environment variable to <code>1</code>). None <code>RUN_INTERVAL</code> The interval at which to scan for new containers, in Go's <code>time.ParseDuration</code> format. Set to <code>0</code> to run once and exit. <code>1h</code> <code>TZ</code> Customise the timezone. None"},{"location":"#flags","title":"Flags","text":"Flag Description <code>--dry-run</code>, <code>-d</code> Simulates the process of adding DNS records and proxy hosts without making any actual changes to Pi-hole or Nginx Proxy Manager."},{"location":"#per-container-configuration","title":"Per Container Configuration","text":""},{"location":"#nginx-proxy-manager","title":"Nginx Proxy Manager","text":"<p>Use the following labels to configure Nginx Proxy Manager entries</p> Label Description Default <code>plugNPiN.npmOptions.blockExploits</code> Enables or disables the \"Block Common Exploits\" option on the proxy host. Set to <code>true</code> or <code>false</code> <code>false</code> <code>plugNPiN.npmOptions.cachingEnabled</code> Enables or disables the \"Cache Assets\" option on the proxy host. Set to <code>true</code> or <code>false</code> <code>false</code> <code>plugNPiN.npmOptions.certificateName</code> Certificate to use for this host. Must already exist on the NPM instance <code>plugNPiN.npmOptions.forceSsl</code> Force SSL <code>false</code> <code>plugNPiN.npmOptions.http2Support</code> Enable HTTP/2 Support <code>false</code> <code>plugNPiN.npmOptions.hstsEnabled</code> Enable HSTS <code>false</code> <code>plugNPiN.npmOptions.hstsSubdomains</code> Enable HSTS Subdomains <code>false</code> <code>plugNPiN.npmOptions.scheme</code> The scheme used to forward traffic to the container. Can be <code>http</code> or <code>https</code> <code>http</code> <code>plugNPiN.npmOptions.websocketsSupport</code> Enables or disables the \"Allow Websocket Upgrade\" option on the proxy host. Set to <code>true</code> or <code>false</code> <code>false</code>"},{"location":"#usage","title":"Usage","text":""},{"location":"#docker-compose","title":"Docker Compose","text":"<p>It is highly recommended to use a Docker socket proxy to avoid giving the container direct access to the Docker daemon. This improves security by limiting the container's privileges.</p>"},{"location":"#recommended-using-a-docker-socket-proxy","title":"Recommended: Using a Docker Socket Proxy","text":"<pre><code>services:\n  socket-proxy:\n    image: lscr.io/linuxserver/socket-proxy:latest\n    container_name: socket-proxy\n    environment:\n      # Allow access to the container list\n      - CONTAINERS=1\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    read_only: true\n    tmpfs:\n      - /run\n\n  plugnpin:\n    image: ghcr.io/deepspace2/plugnpin:latest\n    container_name: plugnpin\n    depends_on:\n      - socket-proxy\n    environment:\n      - DOCKER_HOST=tcp://socket-proxy:2375\n      - NGINX_PROXY_MANAGER_HOST=...\n      - NGINX_PROXY_MANAGER_USERNAME=...\n      - NGINX_PROXY_MANAGER_PASSWORD=...\n      - PIHOLE_HOST=...\n      - PIHOLE_PASSWORD=...\n    restart: unless-stopped\n</code></pre>"},{"location":"#not-recommended-mounting-the-docker-socket","title":"Not Recommended: Mounting the Docker Socket","text":"<pre><code>services:\n  plugnpin:\n    image: ghcr.io/deepspace2/plugnpin:latest\n    container_name: plugnpin\n    environment:\n      - NGINX_PROXY_MANAGER_HOST=...\n      - NGINX_PROXY_MANAGER_USERNAME=...\n      - NGINX_PROXY_MANAGER_PASSWORD=...\n      - PIHOLE_HOST=...\n      - PIHOLE_PASSWORD=...\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    restart: unless-stopped\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are very welcome! If you have a feature request, bug report, or want to contribute yourself, please feel free to open an issue or submit a pull request.</p>"}]}